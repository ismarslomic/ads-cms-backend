var mongoose=require("mongoose"),MediaPlayer=mongoose.model("MediaPlayer");exports.readAllPlayers=function(){return function(a,b){MediaPlayer.find(function(a,c){a?returnError(b,400,a):b.json(c)})}},exports.readPlayer=function(){return function(a,b){MediaPlayer.findById(a.params.id,function(a,c){a?b.json(a):b.json(c)})}},exports.updatePlayer=function(){return function(a,b){var c=new MediaPlayer(a.body);MediaPlayer.findById(a.params.id,function(a,d){a?b.json(a):(d.name=c.name,d.ip=c.ip,d.location=c.location,d.isActive=c.isActive,d.updated=new Date,d.save(function(a,c){a?b.json(a):b.json(c)}))})}},exports.createPlayer=function(){return function(a,b){var c=new MediaPlayer(a.body);c.save(function(a){a||!c?returnError(b,400,a):b.json(c)})}},exports.deletePlayer=function(){return function(a,b){MediaPlayer.findById(a.params.id,function(a,c){a?b.json(a):null==c?b.status(404).send("Media player not found"):c.remove(function(a,c){a?b.json(a):b.json(c)})})}};var returnError=function(a,b,c){console.log("Error! - "+c),a.writeHead(b,{"Content-Type":"text/plain"}),a.end(c.toString())};